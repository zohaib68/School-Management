{
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"], // Targeting TS/TSX files
      "rules": {
        "@typescript-eslint/no-empty-object-type": "off",
        "@typescript-eslint/no-empty-interface": ["error", { "allowSingleExtends": true, "allowMultipleExtends": true }]

      }
    }
  ],
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "@typescript-eslint",
    "react",
    "react-hooks"
  ],
  "rules": {
    "@typescript-eslint/no-empty-object-type": "off", // Suppress the warning for empty interfaces
    "@typescript-eslint/explicit-module-boundary-types": "off", // Optional: You can turn this off if you don't want to always type function return types
    "react/prop-types": "off", // Optional: If you're using TypeScript for typing, you can turn off prop-types validation
    "react/react-in-jsx-scope": "off", // Optional: For Next.js projects (it doesn't require React to be in scope)
    "no-unused-vars": "warn", // Warn for unused variables
    "no-console": "warn" // Warn for console logs
  },
  "settings": {
    "react": {
      "version": "detect" // Automatically detect the react version
    }
  }
}
